// This file was generated by gir (https://github.com/gtk-rs/gir)
// from ..
// from ../gir-files
// DO NOT EDIT

use crate::{ffi,Metadata,MetadataStore};
use glib::{prelude::*,translate::*};

glib::wrapper! {
    #[doc(alias = "GeglMetadataHash")]
    pub struct MetadataHash(Object<ffi::GeglMetadataHash, ffi::GeglMetadataHashClass>) @extends MetadataStore, @implements Metadata;

    match fn {
        type_ => || ffi::gegl_metadata_hash_get_type(),
    }
}

impl MetadataHash {
    #[doc(alias = "gegl_metadata_hash_new")]
    pub fn new() -> MetadataHash {
        assert_initialized_main_thread!();
        unsafe {
            MetadataStore::from_glib_full(ffi::gegl_metadata_hash_new()).unsafe_cast()
        }
    }
}

impl Default for MetadataHash {
                     fn default() -> Self {
                         Self::new()
                     }
                 }
